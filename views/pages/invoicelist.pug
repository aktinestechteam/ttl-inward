extends ../layouts/matrix_layout.pug

block variables
	- var activePage = 'blank-page'
	- var activeGroup = 'pages'
	- var date_format_options = {timeZone: 'Asia/Kolkata', year: 'numeric', month:'short', day:'numeric'};
	// Custom CSS
	link(rel='stylesheet', type='text/css', href='/extra-libs/multicheck/multicheck.css')
	//link(rel='stylesheet', type='text/css', href='https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.18/af-2.3.0/b-1.5.2/b-colvis-1.5.2/b-flash-1.5.2/b-html5-1.5.2/b-print-1.5.2/cr-1.5.0/fc-3.2.5/fh-3.1.4/kt-2.4.0/r-2.2.2/rg-1.0.3/rr-1.2.4/sc-1.5.0/sl-1.2.6/datatables.min.css')
	link(rel='stylesheet', type='text/css', href='/dist/css/datatables.min.css')
	//link(rel='stylesheet', href='https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css')-cdn
	link(rel='stylesheet', href='/dist/css/jquery-ui.css')



block content
	// ==============================================================
	// Container fluid
	// ==============================================================
	.container-fluid
		// ==============================================================
		// Start Page Content
		// ==============================================================
		label.control-label Search Invoice
		.row
			.col-lg-3
				input#inwardcargo_invoice_search_invoiceno_input.form-control(type='text', placeholder='Enter Invoice Number' name='inwardcargo_invoice_search_invoiceno_input', autocomplete="off")
			.col-lg-3
				button.btn.btn-danger.waves-effect.waves-light.save-category.ml-2.mb-3(type='button' onclick='findInvoice()') Find Invoice
		.row.mb-5
			form(action="/invoicelist" method='post' onsubmit="return checkDate()")
				input(type='hidden', name='_csrf', value=_csrf)
				.row
					.col-lg-3
						label.control-label From Date
						input#inwardcargo_invoicelist_fromdate_input.form-control.mr-2(type='text', placeholder='Select From Date', name='inwardcargo_invoicelist_fromdate_input', autocomplete="off")
					.col-lg-3
						label.control-label To Date
						input#inwardcargo_invoicelist_todate_input.form-control.mr-2(type='text', placeholder='Select To Date', name='inwardcargo_invoicelist_todate_input', autocomplete="off")
					.col-lg-3
						label.control-label Invoice City
						select#inwardcargo_invoicelist_city_input.form-control.mr-2(type='text', name='inwardcargo_invoicelist_city_input', autocomplete="off")
							each airport in airportlistdetails
								if(cityCode === airport.iata_code)
									option(value=airport.iata_code, selected='') #{airport.iata_code} (#{airport.city_name})
								else
									option(value=airport.iata_code) #{airport.iata_code} (#{airport.city_name})
					.col-lg-3.pt-3.mt-3
						button#invoicelist_btn_submit.btn.btn-danger.waves-effect.waves-light.save-category.w-50(type='submit') Submit
							
				.container-fluid.mt-3
					table#invoice_list_table.table.table-bordered(style='background-color:white; table-layout: fixed; word-wrap: break-word;')
						thead
							tr
								th Consignee Name
								th Invoice Number
								th Issued Date
								th Amount Billed
								th Payment Received DT
								th Payment Amount
								th Payment Mode
								th Payment Ref No
								th DCM
								th Void
						tbody
							if(invoicelist)
								each invoice,i in invoicelist
									tr(class=(invoice.payment_amount === 0 ? 'badge-danger' : ''))
										- var found_awb_user_data = false;
										each awbuserdata,j in awbuserdatalist
											if(invoice.awb_user_datas.includes(awbuserdata[0].id) && found_awb_user_data === false)
												td(onclick="redirectInvoice('"+invoice.id+"')") #{awbuserdata[0].consignee_name}
												- found_awb_user_data = true;
										if(found_awb_user_data === false)
											td
										td(onclick="redirectInvoice('"+invoice.id+"')") #{invoice.invoice_number}
										td(onclick="redirectInvoice('"+invoice.id+"')") #{new Date(invoice.invoice_issue_date).toLocaleString('en-US', date_format_options)}
										td(onclick="redirectInvoice('"+invoice.id+"')") #{sails.config.globals.price_formatter(Math.ceil(invoice.amount_billed))}
										if(invoice.payment_received_date != 0)
											td(onclick="redirectInvoice('"+invoice.id+"')") #{new Date(invoice.payment_received_date).toLocaleString('en-US', date_format_options)}
										else
											td(onclick="redirectInvoice('"+invoice.id+"')") 
										td(onclick="redirectInvoice('"+invoice.id+"')") #{invoice.payment_amount}
										td(onclick="redirectInvoice('"+invoice.id+"')") #{invoice.payment_mode}
										td(onclick="redirectInvoice('"+invoice.id+"')") #{invoice.payment_reference_number}
										//- td
										//- 	button.btn.btn-primary.btn-sm(type='button', onclick="redirectDCM('"+invoice.id+"','"+cityCode+"')") DCM
										//- td
										//- 	button.btn.btn-success.btn-sm(type='button', onclick='showVoidReasonModal(\'' + invoice.id + '\', "Void Invoice")') Void	
										if(sails.config.globals.check_voidable(invoice.invoice_issue_date, invoice_irn_list[i]))
											td
												if(invoice.void_on === 0)
													td
														button.btn.btn-success.btn-sm(type='button', onclick='showVoidReasonModal(\'' + invoice.id + '\', "Void Invoice")') Void	
												else
													td Voided
										else
											td
												if(invoice.void_on === 0 && invoice.payment_received_date > 0)
													button.btn.btn-primary.btn-sm(type='button', onclick="redirectDCM('"+invoice.id+"','"+cityCode+"')") DCM
											td 
		include ../includes/reasonmodal.pug
		// END MODAL
		// ==============================================================
		// End Container fluid
		// ==============================================================
	include ../includes/footer.pug
block specific-js
	// this page js
	//script(src='/libs/jquery/dist/jquery.min.js')
	script(src='/extra-libs/multicheck/datatable-checkbox-init.js')
	script(src='/extra-libs/multicheck/jquery.multicheck.js')
	script(src='/js/swal_helper.js')
	include ../includes/csrf.pug
	script.
		$( "#inwardcargo_invoicelist_fromdate_input" ).datepicker();
		$( "#inwardcargo_invoicelist_fromdate_input" ).datepicker("option", "dateFormat", 'yy-mm-dd' );
		$('#inwardcargo_invoicelist_fromdate_input').change(function() {
			$( "#inwardcargo_invoicelist_todate_input" ).removeClass( "hasDatepicker" )
			var date = $("#inwardcargo_invoicelist_fromdate_input").val();
			$( "#inwardcargo_invoicelist_todate_input" ).datepicker({minDate: new Date(date)});
			$( "#inwardcargo_invoicelist_todate_input" ).datepicker("option", "dateFormat", 'yy-mm-dd' );
		});
		
		function redirectInvoice(id) {
			window.open(location.protocol + "//" + window.location.host + "/invoice?invoice_id=" + id, "_blank");
		}
		
		function findInvoice() {
			$(".invalid-invoice_number" ).remove();
			$("#inwardcargo_invoice_search_invoiceno_input").removeClass('is-invalid');
			var invoice_number= $( "#inwardcargo_invoice_search_invoiceno_input" ).val();
			if(!invoice_number) {
				$("#inwardcargo_invoice_search_invoiceno_input").addClass('is-invalid');
				$( "#inwardcargo_invoice_search_invoiceno_input" ).after( "<div class='invalid-feedback invalid-invoice_number'>Invoice Number cannot be blank</div>");
			}
			else 
				getCSRFToken(function(_csrf) {
					$.post( "/searchusinginvoiceno", {_csrf: _csrf, inwardcargo_invoice_search_invoiceno_input: invoice_number}, function( data ) {
						if(data.error){
							errorSwal('Invoice list','There is no invoice of the kind');
						}
						else if(data.value){
							window.open(location.protocol + "//" + window.location.host + "/invoice?invoice_id=" + data.value, "_blank");
						}
						else{
							errorSwal('No such invoice found');
						}					
					});
				});
			}
			
		function redirectDCM(id, city) {
			window.open(location.protocol + "//" + window.location.host + "/dcm?invoice_id=" + id + "&current_city=" + city, "_blank");
		}
		function checkDate() {
			$(".invalid-fromdate").remove();
			$(".invalid-todate").remove();
			$("#inwardcargo_invoicelist_fromdate_input").removeClass('is-invalid');
			$("#inwardcargo_invoicelist_todate_input").removeClass('is-invalid');
			var fromdate =$("#inwardcargo_invoicelist_fromdate_input").val();
			var todate =$('#inwardcargo_invoicelist_todate_input').val();
			if(!fromdate) {
				$("#inwardcargo_invoicelist_fromdate_input").addClass('is-invalid');
				$("#inwardcargo_invoicelist_fromdate_input" ).after( "<div class='invalid-feedback invalid-fromdate'>Please select date</div>");
				return false;
			}
			else if(!todate) {
				$("#inwardcargo_invoicelist_todate_input").addClass('is-invalid');
				$("#inwardcargo_invoicelist_todate_input").after( "<div class='invalid-feedback invalid-todate'>Please select date</div>");
				return false;
			}

			else if(!($('inwardcargo_invoicelist_city_input'))) {
				$("#inwardcargo_invoicelist_todate_input").addClass('is-invalid');
				$("#inwardcargo_invoicelist_todate_input").after( "<div class='invalid-feedback invalid-todate'>Please select City</div>");
				return false;
			}
			
			return true;
		}
		
		function performInvoiceVoid(invoice_id, selected_reason, user_typed_reason) {
			if(invoice_id && selected_reason && user_typed_reason) {
				getCSRFToken(function(_csrf) {
					$.post( "/voidinvoice", {_csrf: _csrf, invoice_id: invoice_id,  selected_reason: selected_reason, user_typed_reason: user_typed_reason}, function( data ) {
						if(data.error) {
							console.log(data.error);
						} else {
							//for refreshing page
							location.reload();
						}
					}, "json");
				});
			} else {
				errorSwal('Error','reason cannot be blank');
			}
		}
		
		function showVoidReasonModal(id,modal_title) {
			$.get( "/getreasonsforvoid?"+Date.now(),{modal_title: modal_title},function( data ) {
				var reason_option = '';
				 $('#inwardcargo_voidreason_reason_select').empty();
				 $('#inwardcargo_voidreason_explanation_reason_input').val('');
				for( i = 0; i < data.value.length; i++) {
					reason_option = reason_option + '<option value='+'"'+data.value[i].reason+'"'+'>'+data.value[i].reason+'</option>';
				}
				$("#inwardcargo_voidreason_reason_select").append(reason_option);
				$('#inwardcargo_void_id').val(id);
				$('#inwardcargo-void-reason-title').text(modal_title);
				$('#inwardcargo-void-reason-modal').modal('show');
			});
		}
		
		function performVoid() {
			var number = $('#inwardcargo_void_id').val();
			var selected_reason = $('#inwardcargo_voidreason_reason_select').val();
			var user_typed_reason = $('#inwardcargo_voidreason_explanation_reason_input').val();
			var modal_title = $('#inwardcargo-void-reason-title').text();
			performInvoiceVoid(number, selected_reason, user_typed_reason)
		}
