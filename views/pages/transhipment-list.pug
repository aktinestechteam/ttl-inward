extends ../layouts/matrix_layout.pug

block variables
	- var activePage = 'blank-page'
	- var activeGroup = 'pages'
	- var date_format_options = {year:'numeric', month:'short', day:'numeric'};
	// Custom CSS
	link(rel='stylesheet', type='text/css', href='/extra-libs/multicheck/multicheck.css')
	//link(rel='stylesheet', type='text/css', href='https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.18/af-2.3.0/b-1.5.2/b-colvis-1.5.2/b-flash-1.5.2/b-html5-1.5.2/b-print-1.5.2/cr-1.5.0/fc-3.2.5/fh-3.1.4/kt-2.4.0/r-2.2.2/rg-1.0.3/rr-1.2.4/sc-1.5.0/sl-1.2.6/datatables.min.css')
	link(rel='stylesheet', type='text/css', href='/dist/css/datatables.min.css')
	//link(rel='stylesheet', href='https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css')-cdn
	link(rel='stylesheet', href='/dist/css/jquery-ui.css')



block content
	// ==============================================================
	// Container fluid
	// ==============================================================
	.container-fluid
		// ==============================================================
		// Start Page Content
		// ==============================================================
		//-label.control-label Search Invoice
		//-.row
			.col-lg-3
				input#inwardcargo_invoice_search_invoiceno_input.form-control(type='text', placeholder='Enter Invoice Number' name='inwardcargo_invoice_search_invoiceno_input', autocomplete="off")
			.col-lg-3
				button.btn.btn-danger.waves-effect.waves-light.save-category.ml-2.mb-3(type='button' onclick='findInvoice()') Find Invoice
				
		h3 Transhipments
		.row
			.col-1.m-auto
				div.input-group-addon Station
			.col-2
				select#transhipment_station.select2.form-control.custom-select(type='text', name='inwardcargo_igm_upload_select_igm_from_available_igm', autocomplete="off")
					each inward_port in inward_ports
						option(value=inward_port.iata_code)=inward_port.iata_code + ' (' + inward_port.city_name + ')'
			.col-5.mx-auto
				div.input-group.input-daterange
					input#transhipment_start_date.form-control(type="text",placeholder="Select Start Date",data-date-end-date="0d")
					div.input-group-addon.my-auto TO
					input#transhipment_end_date.form-control(type="text",placeholder="Select End Date",data-date-end-date="0d")
			.col-3.mx-2
				button.btn.btn-danger(onclick='getTranshipments()')
					i.fa.fa-file
					| &nbsp;&nbsp;Submit

		.card.mt-2
			.row.card-body
				.col-md-12
					.tile
						.tile-body
							table.table.table-bordered(style='background-color:white')#transhipment_table
								thead
									tr
										th AWB / From-To
										th IGM / Flight No (1st Carrier)
										th Flight/Truck IGM (2nd Carrier)
										th Flight/Truck Date
										th Comments
										th Commented By
										th Cargo Data
	
	#transhipment_add_comments_modal.modal.fade.none-border
		.modal-dialog
			.modal-content
					.modal-header
						h4.modal-title
							i#transhipment_add_comments_modal_title.mdi.mdi-city
						button.close(type='button', data-dismiss='modal', aria-hidden='true') Ã—
					.modal-body
						.row
							#transhipment_add_comments_modal_transfer_date.col-md-6
								label.control-label Flight/Truck uplift Date
								input#transhipment_add_comments_modal_transfer_date_input.form-control.form-white(placeholder='Select Transfer Date', type='text', name='transhipment_add_comments_modal_transfer_date_input', autocomplete="off")
							#transhipment_add_comments_modal_transfer_igm.col-md-6
								label.control-label Flight Number
								input#transhipment_add_comments_modal_transfer_igm_input.form-control.form-white(placeholder='Add Flight Number', type='text', name='transhipment_add_comments_modal_transfer_igm_input', autocomplete="off" )
							#transhipment_add_pieces_modal_transfer_igm.col-md-6
								label.control-label Pieces to Tranship
								input#transhipment_add_pieces_modal_transfer_igm_input.form-control.form-white(placeholder='Pieces to Tranship', type='text', name='transhipment_add_pieces_modal_transfer_igm_input', autocomplete="off" )
							#transhipment_add_weight_modal_transfer_igm.col-md-6
								label.control-label Weight to Tranship
								input#transhipment_add_weight_modal_transfer_igm_input.form-control.form-white(placeholder='Weight to Tranship', type='text', name='transhipment_add_weight_modal_transfer_igm_input', autocomplete="off" )
							#transhipment_add_comments_modal_transfer_comments.col-md-12
								label.control-label Add Comments
								input#transhipment_add_comments_modal_transfer_comments_input.form-control.form-white(placeholder='Enter Comments', type='text', name='transhipment_add_comments_modal_transfer_comments_input', autocomplete="off")
								
								//-	Hidden fields
								input#transhipment_add_comments_transhipment_id(type='hidden', value='transhipment_add_comments_transhipment_id')
								input#transhipment_add_pieces_transhipment_id(type='hidden', value='transhipment_add_pieces_transhipment_id')
								input#transhipment_add_weight_transhipment_id(type='hidden', value='transhipment_add_weight_transhipment_id')
					.modal-footer
						button#itranshipment_add_comments_save.btn.btn-danger.waves-effect.waves-light.save-category(type='button', name='itranshipment_add_comments_save', onclick='saveComments()') Save
						button.btn.btn-secondary.waves-effect(type='button', data-dismiss='modal') Close

		// END MODAL
		// ==============================================================
		// End Container fluid
		// ==============================================================
	include ../includes/footer.pug
block specific-js
	// this page js
	//script(src='/libs/jquery/dist/jquery.min.js')
	script(src='/extra-libs/multicheck/datatable-checkbox-init.js')
	script(src='/extra-libs/multicheck/jquery.multicheck.js')
	script(src='/js/swal_helper.js')
	script(src='/js/helper.js')
	script(src='/js/validation.js')
	include ../includes/csrf.pug
	script.
		let transhipment_table = $('#transhipment_table').DataTable({
			//dom: 'lfrtBip',
			sScrollX: '100%',
			autoWidth: false,
			dom: 'lfrtip',
			buttons: [
				'copy', 'csv', 'excel', 'pdf', 'print'
			],
			"aoColumns": [
				{
					mData: 0,
					bSortable: false,
					mRender: function(data, type, full) {
						return '<div>'+data[1]+'</div><div><div class="badge badge-warning"><i class="mdi mdi-airplane-takeoff"></i><span class="pl-1">'+data[2]+'</span></div><div class="badge badge-dark"><i class="mdi mdi-airplane-landing"></i><span class="pl-1">'+data[3]+'</span></div></div>';
					}
				},
				{
					mData: 1,
					bSortable: false,
					mRender: function(data, type, full) {
						return '<div>'+data[0]+'</div><div><strong>'+data[1]+'</strong></div><div>'+data[2]+'</div>';
					}
				},
				{
					mData: 2,
					bSortable: false
				},
				{
					mData: 3,
					bSortable: false,
					bSearchable: true
				},
				{
					mData: 4,
					bSortable: false
				},
				{
					mData: 5,
					bSortable: false
				},
				{
					mData: 6,
					bSortable: false,
					mRender: function(data, type, full) {
						return '<div>' + data[0] + ' pc(s) / ' + data[1] + ' kg</div><div class="badge badge-danger">' + data[2] + '</div>'
					}
				}
			]
		});
		
		$('#transhipment_start_date').datepicker({
			format: "dd-M-yyyy",
			autoclose: true,
			todayHighlight: true,
		}).on('changeDate', function(selected_start_time){
			//console.log(selected_start_time.date);
			$('#transhipment_end_date').datepicker('show');
		});
		
		$('#transhipment_start_date').datepicker('show');
		
		$('#transhipment_end_date').datepicker({
			format: "dd-M-yyyy",
			autoclose: true,
			todayHighlight: true
		}).on('changeDate', function(selected_end_time){
			let start_time = $('#transhipment_start_date').datepicker('getDate').getTime();
			let end_time = selected_end_time.date.getTime();
			
			if(end_time < start_time) {
				swal('Oops', 'Please select END-DATE larger or equal to START-DATE', 'error');
				$('#transhipment_end_date').datepicker('update', '');
			}
		});
		
		function getTranshipments() {
			
			let start_time_picker = $('#transhipment_start_date').datepicker('getDate');
			if(!start_time_picker) {
				swal('Oops', 'Please select START-DATE', 'error');
				return;
			}
			
			let end_time_picker = $('#transhipment_end_date').datepicker('getDate');
			if(!end_time_picker) {
				swal('Oops', 'Please select END-DATE', 'error');
				return;
			}
			
			showStaticFakeLoader();
			getCSRFToken(function(_csrf) {
				$.post('/gettranshipmentdata', {
					_csrf: _csrf,
					station: $('#transhipment_station').val(),
					start_date: $('#transhipment_start_date').datepicker('getDate').getTime(),
					end_date: $('#transhipment_end_date').datepicker('getDate').getTime() + 24*60*60*1000
				}, function(data) {
					if(!data.error) {
						transhipment_table.clear();
						if(data.data.length) {
							data.data.forEach(function(transhipment, index) {
								let transhipment_date = new Date(transhipment.createdAt);
								let transhipment_date_to_show = normalizeDigitsToTwo(transhipment_date.getDate()) + '-' + normalizeDigitsToTwo(transhipment_date.getMonth() + 1) + '-' + transhipment_date.getFullYear();// + ', ' + normalizeDigitsToTwo(transhipment_date.getHours()) + ':' + normalizeDigitsToTwo(transhipment_date.getMinutes());
								let transhipment_transfer_date = transhipment.transfer_date > 0 ? new Date(transhipment.transfer_date) : 0;
								let transhipment_transfer_date_to_show = transhipment_transfer_date > 0 ? (normalizeDigitsToTwo(transhipment_transfer_date.getDate()) + '-' + normalizeDigitsToTwo(transhipment_transfer_date.getMonth() + 1) + '-' + transhipment_transfer_date.getFullYear()) : '';
								
								transhipment_table.row.add([
									[transhipment.id, transhipment.awb_number, transhipment.source, transhipment.destination,],
									[transhipment.igm_no_rx, transhipment.flight_no_rx, transhipment_date_to_show],
									transhipment.transfer_vehicle_number,
									transhipment_transfer_date_to_show,
									transhipment.transfer_comments,
									transhipment.transfer_comments_by,
									[transhipment.no_of_pieces_rx, transhipment.weight_rx, transhipment.commodity]
								]).draw(true);
							});
						} else {
							swal('Oops', 'There exists No data to show', 'info');
						}
						hideFakeLoader();
					}
				});
			});
		}
		
		function getValidationRules(pieces, weight) {
			return [

				{tagid: 'transhipment_add_comments_modal_transfer_date_input', regex_name: 'free_text', allow_numbers: true, min: 0, required: true, errmsg: 'Please select a Date of Transfer'},
				{tagid: 'transhipment_add_comments_modal_transfer_igm_input', regex_name: 'text', allow_numbers: true, min: 4, max: 10, required: true, errmsg: 'IGM must be between 4-10 characters'},

				{tagid: 'transhipment_add_pieces_modal_transfer_igm_input', regex_name: 'any_number', required: true, errmsg: 'Please add 1 or more pieces'},
				{tagid: 'transhipment_add_pieces_modal_transfer_igm_input', regex_name: 'max_number', required: true, max: pieces, errmsg: 'Please add maximum of ' + pieces + ' pieces'},
				
				{tagid: 'transhipment_add_weight_modal_transfer_igm_input', regex_name: 'any_number', allow_decimal: true, min: 0.001, required: true, errmsg: 'Please enter some weight'},
				{tagid: 'transhipment_add_weight_modal_transfer_igm_input', regex_name: 'max_number', allow_decimal: true, max: weight, required: true, errmsg: 'Please enter weight less than ' + weight},


				{tagid: 'transhipment_add_comments_modal_transfer_comments_input', regex_name: 'free_text', allow_numbers: true, min: 10, required: true, errmsg: 'Please enter a valid Comment of minimum 10 characters'},

				/*{tagid: 'quantity', text: '0', regex_name: 'any_number', errmsg: 'Only Digits are allowed for Quantity.'},
				{tagid: 'phone', text: '9876543210', regex_name: 'any_number', errmsg: 'the number should be decimal number', allow_negative: false, allow_decimal: true},
				{tagid: 'address', text: 'Brindavan', regex_name: 'text', errmsg: 'Address Error', allow_numbers: true, min: 3, other_chars: ' ', max: 5},*/
			];
		}
		
		function saveComments() {
			let id = $('#transhipment_add_comments_transhipment_id').val();
			let pieces = $('#transhipment_add_pieces_transhipment_id').val();
			let weight = $('#transhipment_add_weight_transhipment_id').val();
			
			let transhipment_add_comments_modal_transfer_date_input = new Date($('#transhipment_add_comments_modal_transfer_date_input').datepicker('getDate')).getTime();
			
			let transhipment_add_comments_modal_transfer_igm_input = $('#transhipment_add_comments_modal_transfer_igm_input').val();
			
			let transhipment_add_comments_modal_transfer_comments_input = $('#transhipment_add_comments_modal_transfer_comments_input').val();
			
			//if(transhipment_add_comments_modal_transfer_date_input && transhipment_add_comments_modal_transfer_igm_input && transhipment_add_comments_modal_transfer_comments_input) {
			let x = validate(getValidationRules(pieces, weight));
			console.log(x)
			if(x) {
				getCSRFToken(function(_csrf) {
					$.post('/submitTranshipmentTransferInputs', {
						_csrf: _csrf,
						id: id,
						transhipment_add_comments_modal_transfer_date_input: transhipment_add_comments_modal_transfer_date_input,
						transhipment_add_comments_modal_transfer_igm_input: transhipment_add_comments_modal_transfer_igm_input,
						transhipment_add_comments_modal_transfer_comments_input: transhipment_add_comments_modal_transfer_comments_input,
						transhipment_add_pieces_modal_transfer_igm_input: $('#transhipment_add_pieces_modal_transfer_igm_input').val(),
						transhipment_add_weight_modal_transfer_igm_input: $('#transhipment_add_weight_modal_transfer_igm_input').val(),
						
					}, function(data) {
						getTranshipments();
						$('#transhipment_add_comments_modal').modal('hide');
						
						$('#transhipment_add_comments_transhipment_id').val('');
						$('#transhipment_add_comments_modal_transfer_igm_input').val('');
						$('#transhipment_add_comments_modal_transfer_comments_input').val('');
						
						$('#transhipment_add_pieces_transhipment_id').val('');
						$('#transhipment_add_weight_transhipment_id').val('');
						$('#transhipment_add_pieces_modal_transfer_igm_input').val('');
						$('#transhipment_add_weight_modal_transfer_igm_input').val('');
					});
				});
			}
		}
		
		async function showAddTranshipmentComments(data) {
			//	The recotd is allowed for editing only by the people of transit station and not that of the destination station.
			if(data[0][3] === $('#transhipment_station').val()) {
				errorSwal('Action Prohibited', 'This action is prohibited on this AWB for users of ' + data[0][3]);
				return;
			}
			
			$('#transhipment_add_comments_transhipment_id').val(data[0][0]);
			$('#transhipment_add_comments_modal_title').text(data[0][1] + ', [' + data[0][2] + '-' + data[0][3] + '], ' + data[1][0] + ' - (' + data[1][1] + ')');
			
			$('#transhipment_add_pieces_transhipment_id').val(data[6][0]);
			$('#transhipment_add_weight_transhipment_id').val(data[6][1]);
			
			$('#transhipment_add_comments_modal_transfer_date_input').datepicker({
				format: "dd-M-yyyy",
				autoclose: true,
				todayHighlight: true,
			}).on('changeDate', function(selected_start_time){
				//console.log(selected_start_time.date);
				$('#transhipment_end_date').datepicker('show');
			});
		
			//$('#transhipment_add_comments_modal_transfer_date_input').val(data[3]);
			$('#transhipment_add_comments_modal_transfer_igm_input').val(data[2]);
			$('#transhipment_add_comments_modal_transfer_comments_input').val(data[4]);
			
			$('#transhipment_add_comments_modal').modal('show');
		}
		
		transhipment_table.on('click', 'tr', function () {
			var data = transhipment_table.row( this ).data();
			//alert( 'You clicked on '+data[0]+'\'s row' );
			showAddTranshipmentComments(data);
		} );
		
		//$('#transhipment_add_comments_modal').modal('show');
		