extends ../layouts/matrix_layout.pug

block variables
	- var activePage = 'blank-page'
	- var activeGroup = 'pages'
	// Custom CSS
	link(rel='stylesheet', type='text/css', href='/extra-libs/multicheck/multicheck.css')
	link(href='/libs/datatables.net-bs4/css/dataTables.bootstrap4.css', rel='stylesheet')


block content
	// ==============================================================
	// Container fluid
	// ==============================================================
	.container-fluid
		// ==============================================================
		// Start Page Content
		// ==============================================================
		.row
			//form.container(action="/reasons" method='get')
			label.control-label.col-lg-3 Reason Type
			select#inwardcargo_reason_list_reason_type_input.select2.form-control.custom-select.col-lg-5(style='width: 100%; height:36px;', placeholder='Enter Reason', type='text', name='inwardcargo_reason_list_reason_type_input', autocomplete="off")
				if(reasonTypes)
					each reasontype, index in reasonTypes
						if(reasontype === reasonType)
							option(value=reasontype, selected) #{reasontype}
						else
							option(value=reasontype) #{reasontype}

			.col-12.mt-3
				.card
					.table-responsive
						table.table
							thead.thead-light
								tr
									th(scope='col')
										b Display
									th(scope='col')
										b Reasons
									th(scope='col')
										b Delete
							tbody.customtable
								each reason in reasonlistdetails
									tr
										th(onclick="showModal('"+reason.id+"','"+reason.reason_type+"','"+reason.reason+"','"+reason.make_it_visible+"')")
											label.customcheckbox
												if (reason.make_it_visible == true)
													input.listCheckbox(type='checkbox', checked='', disabled='')
													span.checkmark
												else
													input.listCheckbox(type='checkbox', disabled='')
													span.checkmark
										td(onclick="showModal('"+reason.id+"','"+reason.reason_type+"','"+reason.reason+"','"+reason.make_it_visible+"')") #{reason.reason}
										td
											//form(action="/deletereason" method='post')
											//button.btn.btn-danger.waves-effect.waves-light.save-category(type='submit', name='inwardcargo_reason_list_delete_reason', value =reason.id)
											button.btn.btn-danger.waves-effect.waves-light.save-category(type='submit', name='inwardcargo_reason_list_delete_reason',  onclick="showConfirm('"+reason.id+"')")
												i.fa.fa-trash

								tr
									td
										button#inwardcargo-reason-list-add-new-reason-modal-btn.btn.m-t-5.btn-info.waves-effect.waves-light(onclick="showModal(undefined, undefined, undefined, undefined)")
											i.fa.fa-plus-circle(aria-hidden='true')
											| &nbsp&nbspAdd Reason
									td
		// Modal Add Category
		#inwardcargo-reason-list-add-new-reason-modal.modal.fade.none-border
			.modal-dialog
				.modal-content
						//form#inwardcargo-reason-list-add-new-reason-form(action="/reasons" method='post', onsubmit="return showFakeLoader('inwardcargo-reason-list-add-new-reason-modal')")
						.modal-header
							h4.modal-title
								i#inwardcargo-reason-list-add-new-reason-modal-title.mdi.mdi-comment-multiple-outline
								|
							button.close(type='button', onclick='hideModal()') Ã—
						.modal-body
							.row
								.col-lg-12
									label.control-label Reason Type
									select#inwardcargo_reason_list_reason_type_input_modal.select2.form-control.custom-select(style='width: 100%; height:36px;', placeholder='Enter Reason', type='text', name='inwardcargo_reason_list_reason_type_input_modal', autocomplete="off" readonly)
										//option(disabled='') Select
										each reasontype in reasonTypes
											if(reasontype === reasonType)
												option(value=reasontype, selected) #{reasontype}
									//input.form-control.form-white(placeholder='Enter Reason', type='text', name='inwardcargo_reason_list_reason_type_input' disabled='')
								.col-lg-12
									label.control-label Reason
									input#inwardcargo_reason_list_reason_input.form-control.form-white(placeholder='Enter Reason', type='text', name='inwardcargo_reason_list_reason_input', autocomplete="off" required='')
							.row
								.col-lg-4
								ul.list-style-none
									li(style='padding-top:1rem;padding-right:1rem;padding-left:1rem;')
										label.customcheckbox(style='font-size: 16px;font-weight: 600') Make the reason available to choose
											input#inwardcargo_reason_list_make_it_visible.listCheckbox(type='checkbox', name='inwardcargo_reason_list_make_it_visible')
											span.checkmark

						.modal-footer
							button#inwardcargo_reason_list_id.btn.btn-danger.waves-effect.waves-light.save-category(type='button', name='inwardcargo_reason_list_id', onclick='saveReason()')
								i.fa.fa-edit(aria-hidden='true')
								| &nbsp&nbspSave
							button.btn.btn-secondary.waves-effect(type='button', onclick='hideModal()')
								i.fa.fa-times-circle(aria-hidden='true')
								| &nbsp&nbspClose
				// END MODAL
				// ==============================================================
				// End PAge Content
				// ==============================================================
				// ==============================================================
				// Right sidebar
				// ==============================================================
				// .right-sidebar
				// ==============================================================
				// End Right sidebar
				// ==============================================================
		// ==============================================================
		// End Container fluid
		// ==============================================================
	include ../includes/footer.pug
block specific-js
	// this page js
	script(src='/extra-libs/multicheck/datatable-checkbox-init.js')
	script(src='/extra-libs/multicheck/jquery.multicheck.js')
	script(src='/extra-libs/DataTables/datatables.min.js')
	include ../includes/csrf.pug
	script.
		$('#menu_reasons').addClass("selected");
		$('#zero_config').DataTable();
		function showModal(id, reasontype, reason, reasonvisible) {
			if ((id) && (reasontype) && (reason)) {
				$('#inwardcargo_reason_list_reason_type_input_modal').val(reasontype);
				$('#inwardcargo_reason_list_reason_input').val(reason);
				$('#inwardcargo_reason_list_id').val(id);
				if (reasonvisible == 'true') {
					$("#inwardcargo_reason_list_make_it_visible").prop("checked", true);
				} else {
					$("#inwardcargo_reason_list_make_it_visible").prop("checked", false);
				}
				$('#inwardcargo-reason-list-add-new-reason-modal-title').text(' Edit Reason');
			} else {
				$('#inwardcargo_reason_list_reason_input').val('');
				$('#inwardcargo_reason_list_id').val('');
				$("#inwardcargo_reason_list_make_it_visible").prop("checked", false);
				$('#inwardcargo-reason-list-add-new-reason-modal-title').text(' Add Reason');
			}
			$('#inwardcargo-reason-list-add-new-reason-modal').modal('show');
		}

		function showConfirm(reasonId) {
			swal({
				title: 'Are you sure?',
				text: "You won't be able to revert this!",
				type: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#3085d6',
				cancelButtonColor: '#d33',
				confirmButtonText: 'Yes, delete it!'
			}).then(function (isConfirm) {
				if (isConfirm.value == true) {
					getCSRFToken(function(_csrf) {
						$.post("/deletereason", {_csrf: _csrf, inwardcargo_reason_list_delete_reason: reasonId}, function (data) {
							if (data.error) {
								swal({
									title: 'Error!',
									text: data.error,
									imageUrl: '/images/alert_cross.png',
									background: '#ffffff',
									imageWidth: 150,
									imageHeight: 150,
									confirmButtonText: 'OK'
								});
							} else {
								if (data.result)
									location.href = '/reasons';
							}
						});
					});
				}
			});
		}

		$(document).ready(function () {
			$("#inwardcargo_reason_list_reason_type_input").change(function () {
				var reason = $("#inwardcargo_reason_list_reason_type_input option:selected").val();
				//console.log(reason);
				getReasons(reason);
				//alert();
				//alert($("select[name='inwardcargo_reason_list_reason_type_input'] option:selected").index());
			});
			//getReasons($("#inwardcargo_reason_list_reason_type_input option:selected").val())
		});

		function getReasons(reason) {
			location.href = '/reasons?inwardcargo_reason_list_reason_type_input='+reason;
		}

		function saveReason() {
			var reasontype = $('#inwardcargo_reason_list_reason_type_input_modal').val();
			var reason = $('#inwardcargo_reason_list_reason_input').val();
			var reasonvisible = ($('#inwardcargo_reason_list_make_it_visible').prop("checked")==true)?true:false;
			var id = $("#inwardcargo_reason_list_id").val();
			$( ".invalid-reason" ).remove();
			$( ".invalid-reasontype" ).remove();
			if(reasontype == '' || reasontype == null || reasontype == undefined) {
				$("#inwardcargo_reason_list_reason_type_input_modal").addClass('is-invalid');
				$( "#inwardcargo_reason_list_reason_input" ).removeClass('is-invalid');
				$( "#inwardcargo_reason_list_reason_type_input_modal" ).after( "<div class='invalid-feedback invalid-reasontype'>Reason Type cannot be blank</div>");
				$( ".invalid-reason" ).remove();
			} else if(reason == '' || reason == null || reason == undefined) {
				$("#inwardcargo_reason_list_reason_input").addClass('is-invalid');
				$( "#inwardcargo_reason_list_reason_type_input_modal" ).removeClass('is-invalid');
				$( "#inwardcargo_reason_list_reason_input" ).after( "<div class='invalid-feedback invalid-reason'>Reason cannot be blank</div>" );
				$( ".invalid-reasontype" ).remove();
			} else {
				$('#inwardcargo_reason_list_id').attr('disabled','disabled');
				$( ".invalid-reason" ).remove();
				$( ".invalid-reasontype" ).remove();
				$( "#inwardcargo_reason_list_reason_input" ).removeClass('is-invalid');
				$( "#inwardcargo_reason_list_reason_type_input_modal" ).removeClass('is-invalid');
				getCSRFToken(function(_csrf) {
					$.post("reasons", {
						_csrf: _csrf,
						inwardcargo_reason_list_reason_type_input_modal: reasontype,
						inwardcargo_reason_list_reason_input: reason,
						inwardcargo_reason_list_make_it_visible: reasonvisible,
						inwardcargo_reason_list_id: id
					}, function (data) {
						if(data.error_code) {
							$('#inwardcargo_reason_list_id').removeAttr("disabled");
						}
						if (data.error_code == 'ERR_R_REASONTYPE_BLANK') {
							$("#inwardcargo_reason_list_reason_type_input_modal").addClass('is-invalid');
							$( "#inwardcargo_reason_list_reason_input" ).removeClass('is-invalid');
							$( "#inwardcargo_reason_list_reason_type_input_modal" ).after( "<div class='invalid-feedback invalid-reasontype'>"+data.error+"</div>");
							$( ".invalid-reason" ).remove();
						} else if (data.error_code == 'ERR_R_REASON_BLANK') {
							$("#inwardcargo_reason_list_reason_input").addClass('is-invalid');
							$( "#inwardcargo_reason_list_reason_type_input_modal" ).removeClass('is-invalid');
							$( "#inwardcargo_reason_list_reason_input" ).after( "<div class='invalid-feedback invalid-reason'>"+data.error+"</div>" );
							$( ".invalid-reasontype" ).remove();
						} else if (data.value) {
							toast({
								type: 'success',
								title: 'Reason added successfully'
							})
							showFakeLoader('inwardcargo-reason-list-add-new-reason-modal', data.value)
						}
					});
				});
			}
		}
		
		
		function hideModal() {
			$( ".invalid-reason" ).remove();
			$( ".invalid-reasontype" ).remove();
			$( "#inwardcargo_reason_list_reason_input" ).removeClass('is-invalid');
			$( "#inwardcargo_reason_list_reason_type_input_modal" ).removeClass('is-invalid');
			$('#inwardcargo-reason-list-add-new-reason-modal').modal('hide');
		}
